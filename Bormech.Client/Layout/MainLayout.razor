@using Bormech.Client.Pages.Componets
@inherits LayoutComponentBase

<MudThemeProvider/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<AuthorizeView>


    <Authorized>
        <MudLayout>
            <MudAppBar>
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                               OnClick="@(e => DrawerToggle())"/>
                My Application

                <MudIconButton Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Inherit" Edge="Edge.End"/>
                <MudText Typo="Typo.button">Hello, @context.User.Identity!.Name</MudText>
                <MudButton @onclick="LogoutClicked" Color="Color.Inherit">Wyloguj</MudButton>
                <MudButton Color="Color.Inherit">Register</MudButton>
            </MudAppBar>


            <MudDrawer @bind-Open="@_drawerOpen">
                <NavMenu/>
            </MudDrawer>
      
            <MudMainContent>
                @Body
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <RedirectToLogin/>
    </NotAuthorized>
</AuthorizeView>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    async Task LogoutClicked()
    {
        var logoutModel = new UserSession();
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("/", true);
    }

}