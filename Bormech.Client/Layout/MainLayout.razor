@using Bormech.Client.Pages.Componets
@inject ILogger<MainLayout> Logger
@inherits LayoutComponentBase


<MudThemeProvider/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>
<AuthorizeView>


    <Authorized>
      
        <MudLayout>
            <MudAppBar Elevation="5">
                <MudHidden Breakpoint="Breakpoint.SmAndDown">
                    <MudIcon Icon="@Icons.Custom.Brands.Reddit" Size="Size.Large"/>
                </MudHidden>
                <MudHidden Breakpoint="Breakpoint.MdAndUp">
                    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                                   OnClick="@(e => DrawerToggle())"/>

                </MudHidden>
                <MudHidden Breakpoint="Breakpoint.Xs">
                    <MudText Typo="Typo.h6" Class="ml-4">Admin Dashboard</MudText>
                </MudHidden>
                <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
                    <MudText Typo="Typo.subtitle2">Admin Dashboard</MudText>
                </MudHidden>
                <MudSpacer/>
                <MudMenu FullWidth="true">
                    <ActivatorContent>
                        <MudChip T="string" Size="Size.Large" Icon="@Icons.Material.Filled.Person" Color="Color.Primary">
                            <MudText Typo="Typo.h5">

                                @context.User.Identity!.Name
                            </MudText>
                        </MudChip>
                    </ActivatorContent>
                    <ChildContent>
                        <MudMenuItem Href="/profile">Profil</MudMenuItem>
                        <MudMenuItem OnClick="LogoutClicked">Wyloguj</MudMenuItem>
                    </ChildContent>
                </MudMenu>

            </MudAppBar>


            <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
                <CascadingValue Value="context" Name="Authentication">
                <NavMenu/>
                </CascadingValue>
            </MudDrawer>

            <MudMainContent >
                <MudHidden Breakpoint="Breakpoint.SmAndDown">
                    <MudToolBar DisableGutters="true">
                        <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" OnClick="@((e) => DrawerToggle())" Class="ml-3"/>
                        <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
                        <MudSpacer/>

                        <MudButton Variant="Variant.Text" Href="https://github.com/krzyzako/BorAdmin3" Style="color:#424242;" Class="mr-3">Source Code</MudButton>
                    </MudToolBar>
                </MudHidden>
                <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <RedirectToLogin/>
    </NotAuthorized>
</AuthorizeView>
<MudThemeProvider Theme="_myCustomTheme" />
@code {
    MudTheme _myCustomTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = Colors.Blue.Default,
            Secondary = Colors.Green.Accent4,
            Background = Colors.Gray.Lighten4
        },
        PaletteDark = new PaletteDark()
        {
            Primary = Colors.Blue.Lighten1
        },

        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "160px",
            DrawerWidthRight = "300px"
        }
    };
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    async Task LogoutClicked()
    {
        var logoutModel = new UserSession();
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        Logger.LogDebug("Wylogowano");
        NavManager.NavigateTo("/", true);
    }
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Admin", href: "#"),
        new BreadcrumbItem("Dashboard", href: "#"),
    };

}