@inject ILogger<General> Logger
<MudGrid>
    <MudItem xs="12" sm="4" md="3">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText>Profil Główny</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <div class="d-flex justify-center mb-4">
                    
                            <MudIcon Icon="@Icons.Material.Filled.AccountCircle" Size="Size.Large"></MudIcon>

                </div>
                <MudText Align="Align.Center"> Lindstedt Łukasz</MudText>
                <MudText Align="Align.Center">elektryk</MudText>
            </MudCardContent>
            <MudCardActions Class="d-flex justify-center">
                <MudButton Color="@Color.Secondary">Edit</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="8" md="9">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText>Personal Details</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudTextField Label="Email" Variant="Variant.Outlined" @bind-Value="Email"  />
                <MudTextField Label="Nazwa" Variant="Variant.Outlined"  @bind-Value="Name"/>
                
            </MudCardContent>
            <MudCardActions Class="pb-4 pl-4">
                <MudButton Variant="Variant.Filled" Color="Color.Primary"  OnClick="@(() => Logger.LogInformation($"Zapisano zmiany { Name}") )" Class="ml-auto" >Zapisz zmiany</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
</MudGrid>



@code {
    private string Email = "5TJZP@example.com";
    private string Name = "Lindstedt Łukasz";
    private string Role = "elektryk";

    protected override async Task OnInitializedAsync()
    {
        var auth = (CustomAuthenticationStateProvider)AuthStateProvider;
        var authentication = await auth.GetAuthenticationStateAsync();
        Console.WriteLine(authentication.User.Identity?.Name);
    }

}